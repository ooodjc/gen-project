package ${data.groupId}.service;

import ${data.groupId}.entity.${data.table.entityName};
import ${data.groupId}.entity.${data.table.entityName}Example;
import ${data.groupId}.mapper.${data.table.entityName}Mapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

@Service
public class ${data.table.entityName}Service {
    @Autowired
    private ${data.table.entityName}Mapper ${data.table.entityName}Mapper;

    //所有数据
    public List<${data.table.entityName}> Item(){
        return ${data.table.entityName}Mapper.selectByExample(null);
    }

    //列表
    public List<${data.table.entityName}> Item(Map<String, Object> query){
            ${data.table.entityName}Example example = new ${data.table.entityName}Example();
            ${data.table.entityName}Example.Criteria criteria = example.createCriteria();
        if(query.get("searchValue") != null && !query.get("searchValue").equals("")){
            //criteria.andGoodsTypeNameLike("%" + query.get("searchValue").toString() + "%");
        }
        return ${data.table.entityName}Mapper.selectByExample(example);
    }

    //按主键查询
    public ${data.table.entityName} SelectId(int id){
        return ${data.table.entityName}Mapper.selectByPrimaryKey(id);
    }

    //模糊搜索
    public List<${data.table.entityName}> Search(String key){
        ${data.table.entityName}Example example = new ${data.table.entityName}Example();
        return ${data.table.entityName}Mapper.selectByExample(example);
    }


    //新增
    public boolean Add(${data.table.entityName} info){
        if (${data.table.entityName}Mapper.insert(info) > 0){
            return true;
        }
        return false;
    }

    //删除
    public boolean Delete(int id){
        ${data.table.entityName}Example example = new ${data.table.entityName}Example();
        example.createCriteria().andIdEqualTo(id);
        if (${data.table.entityName}Mapper.deleteByExample(example) > 0){
            return true;
        }
        return false;
    }

    //批量删除
    public boolean Delete(${data.table.entityName}[] infos){
        ${data.table.entityName}Example example = new ${data.table.entityName}Example();
        for (${data.table.entityName} v : infos){
            example.or().andIdEqualTo(v.getId());
        }
        if (${data.table.entityName}Mapper.deleteByExample(example) > 0){
            return true;
        }
        return false;
    }

    //更新
    public boolean Update(${data.table.entityName} info){
        ${data.table.entityName}Example example = new ${data.table.entityName}Example();
        example.createCriteria().andIdEqualTo(info.getId());
        if (${data.table.entityName}Mapper.updateByExampleSelective(info, example) > 0){
            return true;
        }
        return false;
    }

#if($data.table.entityName == "SysUser")
    //登录
    public ${data.table.entityName} Login(String username, String password){
        ${data.table.entityName}Example example = new ${data.table.entityName}Example();
        example.createCriteria().andUserIdEqualTo(username).andUserPasswordEqualTo(password);
        List<${data.table.entityName}> list = ${data.table.entityName}Mapper.selectByExample(example);
        if (list.size() > 0){
            return list.get(0);
        }
        return null;
    }
#end
#if($data.table.entityName == "SysRoute")
    //按权限查询
    public List<SysRoute> SelectRole(String roleid){
        SysRouteExample example = new SysRouteExample();
        example.createCriteria().andRolesLike("%" +roleid + "%").andIsStatusEqualTo(true);
        return SysRouteMapper.selectByExample(example);
    }
#end
}

