<template>
    <div class="edit-dialog">
        <el-dialog
            title="编辑"
            v-model="data.isEditDialog"
            width="30%"
            @close="closeEditDialog"
        >
            <el-form :model="data.editData" :rules="data.rules" ref="editForm" label-width="100px">
                <el-row :gutter="10">
#foreach($item in $data.table.columns)
#if($item.javaName != "id")
                    <el-col :span="20">
                        <el-form-item label="${item.comment}" prop="${item.javaName}">
                            <el-input v-model="data.editData.${item.javaName}" />
                        </el-form-item>
                    </el-col>
#end
#end
                </el-row>
                <el-form-item>
                    <el-row justify="end" style="margin-top: 20px; width: 100%;">
                        <el-button type="info" @click="closeEditDialog">取消</el-button>
                        <el-button type="primary" @click="edit(editForm)">提交</el-button>
                    </el-row>
                </el-form-item>
            </el-form>
        </el-dialog>
    </div>
</template>

<script setup>
import ${data.table.entityName}Api from '@/utils/api/${data.table.entityName}Api.js'
import { ElMessage } from 'element-plus'

const props = defineProps({
    //v-model
    modelValue: {
        type: String,
        default: '',
        required: false
    },
    editData: {
        type: Object,
        required: true
    }
})

const emit = defineEmits(['update:modelValue', 'editChange', 'closeChange'])

const data = reactive({
    isEditDialog: true,
    editData: {},
    rules: {
#foreach($item in $data.table.columns)
#if($item.javaName != "id")
        ${item.javaName}: [
            { required: true, message: '${item.comment}不能为空', trigger: 'blur' },
        ],
#end
#end
    },
})

const editForm = ref()

onMounted(() => {
    data.editData = props.editData
})

const closeEditDialog = () => {
    data.isEditDialog = false
    emit('closeChange', 'close')
}

const edit = async (formEl) => {
    if (!formEl) return
    await formEl.validate((valid, fields) => {
        if (valid) {
            //校验通过
            let editData = JSON.parse(JSON.stringify(data.editData))

            ${data.table.entityName}Api.update(editData).then((res) => {
                if (res.errno === 0) {
                    ElMessage.success('修改成功')
                    data.isAddDialog = false
                    emit('closeChange', 'edit')
                }
            })
        } else {
            //校验不通过
            console.log('error submit!', fields)
        }
    })
}
</script>

<style scoped lang="scss"></style>